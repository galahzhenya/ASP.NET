@model IEnumerable<MVC_Store.Models.VievMidels.Shop.CategoryVM>

@{
	ViewBag.Title = "Categories";
}

<h2>Categories</h2>

@if (TempData["SM"] != null) {
	<div class=" alert alert-success">
		@TempData["SM"]
	</div>
}

<div class="new-cat">
	<div class="imput-group mb-3">
		<div class="input-group-prepend">
			<span class="input-group-text" id="inputGroup-sizing-default">Category Name</span>
		</div>
		<input type="text" id="newcatname" class="form-control" />
	</div>
	<p>
		<a href="#" id="newcata" class="btn btn-success">Add a new category</a>
		<span class="ajax-text">
			<img src="~/Content/img/ajax-loader.gif" height="50" />
		</span>
	</p>
</div>

@if (!Model.Any()) {
	<h1 class="text-center">There are no categotyie.</h1>
}
else {
	<table class="table sorting" id="pages">
		<tr class="home">
			<th>
				@Html.DisplayNameFor(model => model.Name)
			</th>
			<th></th>
		</tr>

		@foreach (var item in Model) {
			<tr id="id_@item.Id">
				<td>
					<div class="container">
						<div class="row">
							<div class="col-0">
								<div class="ui-icon ui-icon-arrowthick-2-n-s" style="margin-top:10px;"></div>
							</div>
							<div class="col">
								@Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
							</div>
						</div>
					</div>
				</td>
				<td>
					@Html.ActionLink("Delete", "Deletecategory", new { id = item.Id }, new { @class = "delete btn btn-danger" })
				</td>
			</tr>
		}

	</table>
}


@section Scripts
{
	<script>
		$(function () {

			//Add new category
			/* Объявляем и инициализируем нужные переменные */

			var newCatA = $("a#newcata"); /*Класс линка добавления*/
			var newCatTextInput = $("#newcatname"); /*Класс текстового поля ввода*/
			var ajaxText = $("span.ajax-text"); /*Класс картинки загрузки*/
			var table = $("table#pages tbody"); /*Класс таблицы вывода*/

			/* Пишем функцию на отлов нажатия Enter */
			newCatTextInput.keyup(function (e) {
				if (e.keyCode == 13) {
					newCatA.click();
				}
			});

			/* Пишем функцию Click */
			newCatA.click(function (e) {
				e.preventDefault();

				var catName = newCatTextInput.val();

				if (catName.length < 3) {
					alert("Category name must be at least 3 characters long.");
					return false;
				}

				ajaxText.show();

				var url = "/admin/shop/AddNewCategory";

				$.post(url, { catName: catName }, function (data) {
					var response = data.trim();

					if (response == "titletaken") {
						ajaxText.html("<span class='alert alert-danger'>That title is taken!</span>");
						setTimeout(function () {
							ajaxText.fadeOut("fast", function () {
								ajaxText.html("<img src='/Content/img/ajax-loader.gif' height='50' />");
							});
						}, 2000);
						return false;
					}
					else {
						if (!$("table#pages").length) {
							location.reload();
						}
						else {
							ajaxText.html("<span class='alert alert-success'>The category has been added!</span>");
							setTimeout(function () {
								ajaxText.fadeOut("fast", function () {
									ajaxText.html("<img src='/Content/img/ajax-loader.gif' height='50' />");
								});
							}, 2000);

							newCatTextInput.val("");

							var toAppend = $("table#pages tbody tr:last").clone();
							toAppend.attr("id", "id_" + data);
							toAppend.find("#item_Name").val(catName);
							toAppend.find("a.delete").attr("href", "/admin/shop/DeleteCategory/" + data);
							table.append(toAppend);
							table.sortable("refresh");
						}
					}
				});
			});

			//Confirm category deletion
			$("body").on("click", "a.delete", function () {
				if (!confirm("Confirm category deletion")) return false;
			});

			//Sorting script
			$("table#pages tbody").sortable({
				items: "tr:not(.home)",
				placeholder: "ui-state-highlight",
				update: function () {
					var ids = $("table#pages tbody").sortable("serialize");
					var url = "/Admin/Shop/ReorderCategories";
					$.post(url, ids, function (data) {

					});
				}
			});
		});
	</script>
}	